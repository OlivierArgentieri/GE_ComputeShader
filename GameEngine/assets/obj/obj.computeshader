#version 430

layout (local_size_x = 1, local_size_y = 1) in;

layout (rgba32f, binding = 0) uniform image2D img_output;
layout(std430, binding = 8) buffer layoutName
{
    vec3 vertices[6];
    float temp;
    float delta_time;
};

void main() {
  // gl_LocalInvocationID -> where we are in local size (32,32)
  // gl_WorkGroupID -> where we are in WorkGroup size (30,40,1)
  // gl_GlobalInvocationID -> where we are in image (gl_LocalInvocationID * gl_WorkGroupID)
  ivec2 coords = ivec2(gl_GlobalInvocationID);

  vec4 pixel;
  pixel = vec4(gl_GlobalInvocationID.x%2,.5,1.0,1.0);
  
  vertices[0] = vec3(-0.5, 0.5, -0.5); 
  vertices[1] = vec3(-0.5, 0.5, 0.5);
  vertices[2] = vec3(0.5, 0.5, 0.5);
  vertices[3] = vec3(0.5, 0.5, 0.5);
  vertices[4] = vec3(0.5, 0.5, -0.5);
  vertices[5] = vec3(-0.5, 0.5, -0.5);
  float temp;
  temp +=delta_time*0.000000000000000000000000000000000000000000001;
  if(temp > 360)
  {
    temp = 0; 
  }
  float distance = 1;
  
  for(int i =0; i< 6; i++)
  {
    vertices[i].x += cos(temp+distance);
    vertices[i].z += sin(temp+distance);

  }
  imageStore(img_output, coords, pixel);
}