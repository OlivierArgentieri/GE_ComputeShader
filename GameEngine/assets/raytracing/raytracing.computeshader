#version 430

layout (local_size_x = 32, local_size_y = 32) in;

layout (rgba32f, binding = 0) uniform image2D img_output;
// layout (rgba32f, binding = 1) uniform image2D img_input;

layout(std430, binding = 5) buffer layoutName
{
    float time;
    float delta_time;
	float temp;
};

void main() {
  // gl_LocalInvocationID -> where we are in local size (32,32)
  // gl_WorkGroupID -> where we are in WorkGroup size (30,40,1)
  // gl_GlobalInvocationID -> where we are in image (gl_LocalInvocationID * gl_WorkGroupID)
   vec4 pixel = vec4(0.0, 0.0, 0.0, 1.0);
  // get index in global work group i.e x,y position
  ivec2 pixel_coords = ivec2(gl_GlobalInvocationID.xy);
  ivec2 dims = imageSize(img_output);
  uvec3 test = gl_LocalInvocationID * gl_WorkGroupID;
  
  float r = test.x / (dims.x * 1.0f);
  float g = test.y / (dims.y *1.0f);
  
  pixel = vec4(r, g, 0.25, 1.0);
 
  //if(pixel_coords.x == 1023)
  //{temp = -1;}
  ivec2 p = ivec2(gl_GlobalInvocationID.xy);
  //pixel = imageLoad(img_input, p);
  //pixel -= vec4(1.0);
  //pixel = vec4(1,1,1,1);
  imageStore(img_output, p, pixel);
}