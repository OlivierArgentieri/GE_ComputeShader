#version 430

layout (local_size_x = 1024, local_size_y = 1) in;

//layout (rgba32f, binding = 0) uniform image2D img_output;
// layout (rgba32f, binding = 1) uniform image2D img_input;

layout(std430, binding = 6) buffer particlesBuffer
{
    vec3 p[1024];
	float temp;
};

void main() {
  // gl_LocalInvocationID -> where we are in local size (32,32)
  // gl_WorkGroupID -> where we are in WorkGroup size (30,40,1)
  // gl_GlobalInvocationID -> where we are in image (gl_LocalInvocationID * gl_WorkGroupID)
  //temp = 1;
  int x_index = int(gl_GlobalInvocationID.x);
  int y_index = int(gl_GlobalInvocationID.y);
  int index = x_index + (32 * y_index);
  p[index] = vec3(x_index/1000. - .5, y_index / 1000. - .5, 1.0);
  temp = gl_LocalInvocationID.x + gl_WorkGroupID.x;
  //p[index].c = vec4(1., 0., 0., 1.);
}
